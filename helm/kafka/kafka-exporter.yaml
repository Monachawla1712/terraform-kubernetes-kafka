image:
  repository: danielqsj/kafka-exporter
  tag: v1.4.2
  pullPolicy: IfNotPresent

replicaCount: 1

kafkaServer:
  - kafka.${namespace}.svc.cluster.local:9092

# Specifies broker version to use, leave empty for default
kafkaBrokerVersion:

# Specifies log verbosity
verbosity: 0

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Specifies whether a PodSecurityPolicy should be created
  pspEnabled: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

env: []
# - name: <ENV_VAR_NAME>
#   value: <value>

# List of additional cli arguments to configure kafka-exporter
# for example: --log.enable-sarama, --log.level=debug, etc.
# all the possible args can be found here: https://github.com/danielqsj/kafka_exporter#flags
extraArgs: []

service:
  type: ClusterIP
  port: 9308
  labels: {}
  annotations: {}

liveness:
  enabled: false
  probe:
    httpGet:
      path: /
      port: exporter-port

readiness:
  enabled: false
  probe:
    httpGet:
      path: /
      port: exporter-port

prometheus:
  serviceMonitor:
    enabled: true
    namespace: ${namespace}
    interval: "30s"
    # If serviceMonitor is enabled and you want prometheus to automatically register
    # target using serviceMonitor, add additionalLabels with prometheus release name
    # e.g. If you have deployed kube-prometheus-stack with release name kube-prometheus
    # then additionalLabels will be
    # additionalLabels:
    #   release: kube-prometheus
    additionalLabels:
      release: prometheus-operator
    targetLabels: []